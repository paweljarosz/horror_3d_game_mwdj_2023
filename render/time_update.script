
local BLOOM = 0
local CHROMATIC = 1
local VIGNETTE = 1
local NOISE = 1

local VHS = 1
local SCANLINES = 1
local CRT = 1
local TIME = 0

local BLOOM_RADIUS = 26.56
local BLOOM_INTENSITY = 1.3
local BLOOM_THRESHOLD = 0.42
local CHROMATIC_STRENGTH = 0.12

local VIG_STRENGTH = 0.4
local VIG_INTENSITY = 0.37
local NOISE_STRENGTH = 0.06
local DIST_STRENGTH = 0.1

local SCAN_STRENGTH = 0.11
local CRT_CURVE = 0.8

local enable_effects1 = vmath.vector4(BLOOM,CHROMATIC,VIGNETTE,NOISE)
local enable_effects2 = vmath.vector4(VHS,SCANLINES,CRT,TIME)

local effects1 = vmath.vector4(BLOOM_RADIUS,BLOOM_INTENSITY,BLOOM_THRESHOLD,CHROMATIC_STRENGTH)
local effects2 = vmath.vector4(VIG_STRENGTH,VIG_INTENSITY,NOISE_STRENGTH,DIST_STRENGTH)
local effects3 = vmath.vector4(SCAN_STRENGTH,CRT_CURVE,0,0)

local pigeon = require "pigeon.pigeon"
local msg_zombie_pov = hash("zombie_fov")
local noise_power_ratio = 0.02

function init(self)
	go.set("#quad", "enable_effects1", enable_effects1)
	go.set("#quad", "enable_effects2", enable_effects2)
	go.set("#quad", "effects1", effects1)
	go.set("#quad", "effects2", effects2)
	go.set("#quad", "effects3", effects3)
	pigeon.subscribe(msg_zombie_pov)
end

function on_message(self, message_id, message, sender)
	if message_id == msg_zombie_pov then
		if message.enter then
			effects2.z = message.distance * noise_power_ratio
		else
			effects2.z = NOISE_STRENGTH
		end
		print("B", effects2.z)
		go.set("#quad", "effects2", effects2)
	end
end

function update(self, dt)
	enable_effects2.w = enable_effects2.w + dt
	go.set("#quad", "enable_effects2", enable_effects2)
end